# general
alias gmail="electron https://gmail.com/ &"
alias search='yay -Ss'
alias ka='killall'
alias sudo='sudo '
alias copy='xclip -selection c'
alias mute='pamixer -t'
alias work="music; workout"
alias ds="display-setup"
alias tor='sudo su - tor tor'
alias nettest="timeout 2 wget -q --spider http://youtube.com"
alias ref='exec zsh'
alias cat='bat'
alias update-grub='sudo grub-mkconfig -o /boot/grub/grub.cfg'
alias less='bat'
alias colors='for i in {0..255}; do print -Pn "%K{$i}  \
 %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+"\n"}; done'
alias matrix="bground kitty --config ~/.config/kitty/colorless.conf tmatrix"

# updating stuff
alias ua='source ~/.alias'
alias update-packages='yay -Qqe > ~/.dotfiles/packages'
alias upsys='yay -Syu'

# files
alias latest_file='ls -Art | tail -n 1'
alias rm='rm -rf'
alias cp='cp -r'


# background jobs (background function defined below)
alias vlc='bground vlc'
alias qb='bground qutebrowser'
alias firefox='bground firefox'

# sudo musts
alias systl='sudo systemctl'
alias systart='sudo systemctl start'
alias sysen='sudo systemctl enable'
alias systop='sudo systemctl stop'
alias sysdis='sudo systemctl disable'

# drives
alias mu='udisksctl mount -b'
alias um='udisksctl unmount -b'
alias dd='sudo dd'
alias lsb='lsblk'

# fonts
alias fonts='kitty + list-fonts --psnames'

# ls
alias ls='lsd -F'
alias tre='lsd --tree -I node_modules -I .git'
alias tra='tr -Ah'

# ne
alias ne='nmcli device wifi'
alias ner='ne rescan && ne'
alias nerst='sudo systemctl restart NetworkManager'
alias nec='ne connect'
alias myip="ifconfig wlan0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | \
grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"


# git
alias cc='git rev-list --count HEAD'
alias gs='git status -s'
alias grh='git reset HEAD~'
alias create-repo='gh repo create'
alias gcm='git commit -m'

# npm
alias ni='npm install'
alias nig='sudo npm install -g'
alias ns='npm start'
alias nr='npm run'
alias nb='npm run build'

# yarn
alias y='yarn'
alias ya='yarn add'
alias yag='yarn global add'
alias yi='yarn install --ignore-optional'
alias ys='yarn start'
alias yu='yarn upgrade'
alias yh='yarn help'
alias yr='yarn remove'
alias rmny='rm -rf node_modules/ yarn.lock'

# pyenv
alias pye='pyenv'
alias pyei='pyenv install'
alias pyel='pyenv install --list | grep'
alias pyev='pyenv versions'
alias pyeg='pyenv global'

# python
alias pi='pip install'
alias pu='pip install --upgrade pip'
alias pipr='pip install -r requirements.txt'
alias pa="poetry add"
alias pad="poetry add --dev"
alias pr="poetry remove"
alias actv='source .venv/bin/activate'
alias deact='deactivate'

# TODO: color test


# colors needed in functions
green="\033[0;32m"
yellow="\033[0;33m"
blue="\033[0;34m"
dark_yellow="\033[0;93m"
purple="\033[38;5;93m"
light_green="\033[38;5;043m"
# things that requires arguments or one liners can't do

# find any (almost) github user's email
find-email () {
    nettest
    if [[ $? -eq 0 ]]; then
        email=$(curl -s -N https://api.github.com/users/$1/events/public | grep -Eio '\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b')
        if [[ $? -eq 0 ]]; then
            echo -e "\n${light_green}Email Found ðŸŽ‰ðŸš€"
            echo -e "${blue}$1${dark_yellow} ->  ${purple}$email"
        else
            echo -e "${dark_yellow}Username Not Found ðŸ˜ˆðŸ¤¬"
        fi

    else
        echo -e "${yellow}You are offline ðŸ˜¡ðŸ¥µ"
    fi
    echo
}

sub () {
    query=$(echo "$*" | tr " " +)
    xdg-open "https://www.opensubtitle.info/search?q=$query"
}

rn () {
    new_location=$(dirname $1)/$2
    mv $1 $new_location
}

mcd () {
    md $1
    cd $1
}

volume () {
    if [[ -n $1  ]]; then
        pamixer --set-volume $1
    else
        pamixer --get-volume
    fi
}

# network test
nt () {
    nettest
    if [[ $? -eq 0 ]]; then
        echo -e "${green}You are online ðŸ¥³ðŸŽ‰"
    else
        echo -e "\033[0;33mYou are offline ðŸ˜¡ðŸ¥µ"
    fi
}

vim () {
    # if file is an directory change working directory
    [[ -d "$1" ]] && cd "$1"
    if [[ ! -e "$1" ]]; then
        # check_perm declares the file to check write permission 
        check_perm=$(dirname "$1") 
    else
        check_perm="$1" 
    fi

    # if user has write permission donot use sudo
    if [[ -w "$check_perm" ]]; then
        nvim $1
    else
        sudo nvim $1
    fi
    # if file was an directory change directory to orignal one
    [[ -d "$1" ]] && cd -
    return 0
}

# detach process from terminal
bground () {
    $* </dev/null &> /dev/null &
    disown
}

# clone via ssh 
clone () {
    url=$(echo "$*" | egrep -o 'https?://[^/]+')
    # url_new="${url##https?://github.com/}"
    # git clone github:$*
    echo $url
    URL_NOPRO=${URL:7}
    URL_REL=${URL_NOPRO#*/}
    # echo "/${URL_REL%%\?*}"

# echo 'https://github.com/github/github' | 
}

# is_url () {
    # if [[ $1 =~ ^(https?|git):// ]]; then
        # echo 1
    # else
        # echo 0
    # fi
# }

clone () {
    # match capital or simple letters
    # if [[is_url $1]]; then
        # url = $1
    # else if [[ $1 =~ ^[a-zA-Z]$ ]]; then
        # url = github:$1
    # fi

    # echo $url
    # cd ~/.tests/repos
    # git clone $*
    # # get the name of the repo

    # repo_name=$(echo $* | sed 's/.*\///')
}

clone-ssh () {
    cd ~/.tests/repos
    git clone github:$1
}

# take over a file that I didn't had access
iown () {
    sudo chown -R $USER $*
    chmod +rw $*
}

setup-py () {
    mcd $1
    if [[ $2 == "" ]] {
        pyenv local $2
    }
    bground python -m venv .venv
    poetry init 
    chpwd
    poetry add autopep8 flake8 black mypy pylint
    git init
    echo ".venv/" > .gitignore
    pip freeze > requirements.txt
}

lh () {
    if [[ $1 == "" ]]; then
        dir = "."
    else
        dir = $1
    fi
    cd $1
    ls -ld .?*
    cd -
}


tv () {
    bground vlc ~/Videos/TV-Series/$1
}

# get quick docs using the given command
howto () {
    wget -q --spider "https://google.com"
    if [ $? -eq 0 ]; then
        curl -fsSL cheat.sh/$1 | less
        # curl -fsSL cheat.sh/$1 | tee $fpath | less
    else
        echo "You don't have an internet connection"
    fi
}

# find alias
fa () {
    alias | grep "$*"
    if [[ $? -ne 0 ]]; then
        echo ðŸ¥º Not Found
    fi
}

add-dotfile () {
    mv $1 $2
    ln -sf $2 $1

}

dkcud () {
    container=`docker-compose up -d | tail -n 1 | cut -d " " -f2`
    echo $container
    docker attach $container

}

mergevid() {
    args=$(echo $* | cut -d " " -f 1,-1)
    out=$(echo $* | cut -d " " -f -0 )
    echo $args
    echo $out
}

add-fonts() {
    cd $1
    mv *.[ot(wo)]tf ~/.local/share/fonts
    bground fc-cache -v
    cd -
    
}

figfonts () {
    showfigfonts $1 | less
}

# cp () {
    # if ls /dev/sd[c-z]; then
        
    # # if [[ *"`lsblk`"* == $2 ]]; then
        # # echo true
    # # else
        # # echo false
    # # fi
# }
code () {
    if [[ -d "$1" ]]; then
        music
    fi
    /usr/bin/code $*
}

music () {
    vlc ~/Music/songs/* --random --loop
}

add-user () {
    sudo useradd -m $1
    sudo usermod -aG wheel,audio,video,optical,storage $1 &
    passwd $1
}

downs () {
    iown /tmp/mozilla_anupama0/*
    mv /tmp/mozilla_anupama0/* ~/Downloads
}

txback () {
    if [[ $(xbacklight) == "100.000000" ]]; then
        xbacklight -set 1
    else
        xbacklight -set 100
    fi
}

# python () {
    # if [[ -n "$*" ]]; then 
        # /usr/bin/env "python $*"
    
    # else 
        # ptpython
    # fi
# }

prompt () {
    if [[ -n "$1" ]]; then
        ln -sf ~/.dotfiles/p10k/$1.zsh ~/.p10k.zsh
        ref
    else
        echo `basename $(readlink -f ~/.p10k.zsh)`
        
    fi
}
